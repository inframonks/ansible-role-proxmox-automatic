---
- name: "Build virtio disk configuration"
  ansible.builtin.set_fact:
    virtio_config: >-
      {{
        virtio_config | default({}) | combine({
          item.name: [
            proxmox_automatic_storage | default(proxmox_automatic_pve_vm_storage),
            ':',
            item.size | string,
            (',discard=' + (item.pve_options | default({})).discard)
              if (item.pve_options | default({})).discard is defined else '',
            (',iothread=' + ((item.pve_options | default({})).iothread | string))
              if (item.pve_options | default({})).iothread is defined else '',
            (',cache=' + (item.pve_options | default({})).cache)
              if (item.pve_options | default({})).cache is defined else '',
            (',backup=' + ((item.pve_options | default({})).backup | string))
              if (item.pve_options | default({})).backup is defined else '',
            (',replicate=' + ((item.pve_options | default({})).replicate | string))
              if (item.pve_options | default({})).replicate is defined else '',
            (',ssd=' + ((item.pve_options | default({})).ssd | string))
              if (item.pve_options | default({})).ssd is defined else ''
          ] | join('')
        })
      }}
  loop: "{{ proxmox_automatic_storage_config | default([]) }}"
  loop_control:
    label: "{{ item.name }}"

- name: "Build network interface configuration"
  ansible.builtin.set_fact:
    net_config: >-
      {{
        net_config | default({}) | combine({
          item.name: [
            'virtio',
            ('=' + item.mac if item.mac is defined else ','),
            ',bridge=',
            (item.bridge | default(proxmox_automatic_defaultbridge)),
            ',tag=',
            (item.vlanid | string),
            ((',mtu=' + item.mtu | string) if item.mtu is defined else ''),
            ((',rate=' + item.rate | string) if item.rate is defined else '')
          ] | join('')
        })
      }}
  loop: "{{ proxmox_automatic_networks }}"
  loop_control:
    label: "{{ item.name }}"

- name: "Create VM"
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox_automatic_api_host }}"
    api_user: "{{ proxmox_automatic_api_user }}"
    api_password: "{{ proxmox_automatic_api_password }}"
    node: "{{ proxmox_automatic_hypervisor }}"
    vmid: "{{ proxmox_automatic_vmid }}"
    name: "{{ ansible_host }}"
    memory: "{{ proxmox_automatic_memory | default(2048) }}"
    cores: "{{ proxmox_automatic_vcpu | default(2) }}"
    cpu: "{{ proxmox_automatic_cpu_type | default('x86-64-v3') }}"
    sockets: "{{ proxmox_automatic_sockets | default(1) }}"
    state: "{{ proxmox_automatic_state | default('present') }}"
    ide:
      ide2: "media=cdrom,{{ proxmox_automatic_storage | default(proxmox_automatic_pve_iso_storage) }}:iso/{{ proxmox_automatic_iso_name | default('rocky9.6-ks') }}.iso"
      ide3: "media=cdrom,{{ proxmox_automatic_storage | default(proxmox_automatic_pve_iso_storage) }}:iso/ks-{{ ansible_host }}.iso"
    bios: ovmf
    efidisk0:
      storage: "{{ proxmox_automatic_storage | default(proxmox_automatic_pve_vm_storage) }}"
      efitype: 4m
      format: raw
      pre_enrolled_keys: true
    tpmstate0:
      storage: "{{ proxmox_automatic_storage | default(proxmox_automatic_pve_vm_storage) }}"
    virtio: "{{ virtio_config }}"
    net: "{{ net_config }}"
    kvm: "{{ proxmox_automatic_kvm | default(true) }}"
    ostype: "{{ proxmox_automatic_os_type | default('l26') }}"
    onboot: "{{ proxmox_automatic_onboot | default(true) }}"
    scsihw: "{{ proxmox_automatic_scsi_hw | default('virtio-scsi-single') }}"
    machine: "{{ proxmox_automatic_machine | default('q35') }}"
    hotplug: "{{ proxmox_automatic_hotplug | default('disk') }}"
    startup: "{{ 'order=' + (proxmox_automatic_boot_order | default(1) | string) + ',up=' + (proxmox_automatic_boot_order_up_wait | default(2) | string) + ',down=' + (proxmox_automatic_boot_order_down_wait | default(3) | string) if proxmox_automatic_startup_order is defined else omit }}"
    agent: enabled=1
    pool: "{{ proxmox_automatic_vm_pool | default(omit) }}"
  delegate_to: localhost

- name: "Start VM"
  community.proxmox.proxmox_kvm:
    api_host: "{{ proxmox_automatic_api_host }}"
    api_user: "{{ proxmox_automatic_api_user }}"
    api_password: "{{ proxmox_automatic_api_password }}"
    node: "{{ proxmox_automatic_hypervisor }}"
    vmid: "{{ proxmox_automatic_vmid }}"
    state: "started"
  delegate_to: localhost
