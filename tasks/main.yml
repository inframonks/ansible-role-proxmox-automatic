---
# Install dependencies if requested
- name: "Install local dependencies for ISO creation"
  ansible.builtin.include_tasks: install_dependencies.yml
  when: proxmox_automatic_install_dependencies | default(false)
  tags:
    - proxmox_automatic_dependencies
    - proxmox_automatic_install_deps

- name: "Initialize empty storage dictionary"
  ansible.builtin.set_fact:
    storage_dict: {}
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Initialize empty network dictionary"
  ansible.builtin.set_fact:
    network_dict: {}
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Initialize empty users list"
  ansible.builtin.set_fact:
    users_list: []
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process defaults storage config"
  ansible.builtin.set_fact:
    storage_dict: "{{ storage_dict | combine({item.name: item}) }}"
  loop: "{{ proxmox_automatic_storage_config_defaults | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process defaults network config"
  ansible.builtin.set_fact:
    network_dict: "{{ network_dict | combine({item.name: item}) }}"
  loop: "{{ proxmox_automatic_networks_defaults | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process group_vars storage config (override defaults)"
  ansible.builtin.set_fact:
    storage_dict: >-
      {{
        storage_dict | combine({
          item.name: storage_dict[item.name] | default({}) | combine(item, recursive=True)
        })
      }}
  loop: "{{ proxmox_automatic_storage_config_group_vars | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process group_vars network config (override defaults)"
  ansible.builtin.set_fact:
    network_dict: "{{ network_dict | combine({item.name: item}) }}"
  loop: "{{ proxmox_automatic_networks_group_vars | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process host_vars storage config (override group vars)"
  ansible.builtin.set_fact:
    storage_dict: >-
      {{
        storage_dict | combine({
          item.name: storage_dict[item.name] | default({}) | combine(item, recursive=True)
        })
      }}
  loop: "{{ proxmox_automatic_storage_config_host_vars | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process host_vars network config (override group vars)"
  ansible.builtin.set_fact:
    network_dict: "{{ network_dict | combine({item.name: item}) }}"
  loop: "{{ proxmox_automatic_networks_host_vars | default([]) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process playbook storage config (override host vars)"
  ansible.builtin.set_fact:
    storage_dict: >-
      {{
        storage_dict | combine({
          item.name: storage_dict[item.name] | default({}) | combine(item, recursive=True)
        })
      }}
  loop: "{{ proxmox_automatic_storage_config_playbook | default(proxmox_automatic_storage_config | default([])) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Process playbook network config (override host vars)"
  ansible.builtin.set_fact:
    network_dict: "{{ network_dict | combine({item.name: item}) }}"
  loop: "{{ proxmox_automatic_networks_playbook | default(proxmox_automatic_networks | default([])) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Set final storage config"
  ansible.builtin.set_fact:
    proxmox_automatic_storage_config: "{{ storage_dict.values() | list }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Set final network config"
  ansible.builtin.set_fact:
    proxmox_automatic_networks: "{{ network_dict.values() | list }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Calculate VMID from network configuration if not defined"
  ansible.builtin.set_fact:
    proxmox_automatic_vmid: >-
      {{ '%04d%03d' | format(
          ((proxmox_automatic_networks | selectattr('name','equalto','net0') | first).vlanid | int),
          ((proxmox_automatic_networks | selectattr('name','equalto','net0') | first).ip.split('.')[-1] | int)
      ) }}
  when: proxmox_automatic_vmid is not defined and proxmox_automatic_networks | length > 0
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Merge users from all sources (defaults -> group_vars -> host_vars -> playbook)"
  ansible.builtin.set_fact:
    users_list: "{{ users_list + (proxmox_automatic_users_defaults | default([])) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Merge users from group_vars"
  ansible.builtin.set_fact:
    users_list: "{{ users_list + (proxmox_automatic_users_group_vars | default([])) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Merge users from host_vars"
  ansible.builtin.set_fact:
    users_list: "{{ users_list + (proxmox_automatic_users_host_vars | default([])) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Merge users from playbook vars"
  ansible.builtin.set_fact:
    users_list: "{{ users_list + (proxmox_automatic_users_playbook | default(proxmox_automatic_users | default([]))) }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Set final users config"
  ansible.builtin.set_fact:
    proxmox_automatic_users_merged: "{{ users_list }}"
  tags:
    - proxmox_automatic
    - proxmox_automatic_create_kickstart
    - proxmox_automatic_create_vm

- name: "Kickstart ISO erstellen und hochladen"
  ansible.builtin.import_tasks: create_kickstart.yml
  tags:
    - proxmox_automatic_create_kickstart
    - proxmox_automatic

- name: "VMs auf Proxmox erstellen"
  ansible.builtin.import_tasks: create_vm.yml
  tags:
    - proxmox_automatic_create_vm
    - proxmox_automatic
